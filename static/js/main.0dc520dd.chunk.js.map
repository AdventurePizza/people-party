{"version":3,"sources":["Cursor.tsx","firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","sizeBig","width","spacing","height","sizeSmall","Cursor","props","avatar","username","userCursorRef","classes","ref","className","style","position","overflow","Avatar","variant","src","alt","textAlign","defaultProps","shouldShowIsActive","FirebaseContext","React","createContext","getProfile","Promise","resolve","isSuccessful","setProfile","claim","prepareMint","fetchBase","FirebaseProvider","children","useCallback","address","a","fetch","method","fetchRes","ok","json","headers","body","JSON","stringify","message","statusText","receiver","Provider","value","Tezos","TezosToolkit","wallet","BeaconWallet","name","preferblackNetwork","setWalletProvider","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","App","useContext","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","isMobile","innerWidth","showPanel","setShowPanel","collections","setCollections","setUsername","setAvatar","createRef","setUserLocations","inputReceiver","setInputReceiver","inputMessage","setInputMessage","preview","setPreview","metadataUri","setMetadataUri","emit","useEffect","then","res","onCursorMove","clientId","clientProfile","x","y","innerHeight","absoluteX","absoluteY","userLocations","onRoomateDisconnect","newUserLocations","on","off","fetchGraphQL","operationsDoc","operationName","variables","query","result","ress","addr","query_collection","errors","data","console","error","hic_et_nunc_token_holder","fetchCollection","HashToURL","hash","type","undefined","replace","subdomain","ipfsClient","CID","toV1","toBaseEncodedString","err","getDomain","reverseRecord","domain","updateCursorPosition","useMemo","_","throttle","onMouseMove","event","clientX","clientY","current","left","top","getActiveAccount","clearActiveAccount","sync","log","requestPermissions","permissions","addEventListener","slice","getAcc","fontSize","alignItems","TextField","id","label","fullWidth","onChange","target","multiline","Button","size","title","onClick","artifacthash","scrolling","at","c","methods","mint_OBJKT","split","reduce","hex","charCodeAt","toString","padStart","send","amount","storageLimit","op","confirmation","tokenID","_operationResult","_events","metadata","internal_operation_results","parameters","args","int","contract","transfer","from_","txs","to_","token_id","catch","overflowY","map","token","IconButton","display_uri","marginRight","justifyContent","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc520dd.chunk.js","sourcesContent":["// @ts-nocheck\nimport React from 'react';\nimport { makeStyles, Avatar, createStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    sizeBig: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n    },\n    sizeSmall: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    },\n  }),\n);\n\nexport const Cursor = (props) => {\n  const {\n    avatar,\n    username,\n    userCursorRef\n  } = props;\n  const classes = useStyles();\n  return (\n    <div ref={userCursorRef} className={props.className} style={{ position: \"absolute\", overflow: \"hidden\" }}>\n      <Avatar variant=\"rounded\" src={avatar} alt=\"change avatar\" className={classes.sizeSmall} />\n      <div style={{ textAlign: \"center\" }} >{username} </div>\n    </div>\n  );\n};\n\nCursor.defaultProps = {\n  shouldShowIsActive: true\n};\n\nexport const Cursors = (props) => {\n  const {\n    avatar,\n    x,\n    y,\n    username,\n  } = props;\n  const classes = useStyles();\n  return (\n    <div className={props.className} style={{ position: \"absolute\", top: (y), left: x, overflow: \"hidden\" }}>\n      <Avatar variant=\"rounded\" src={avatar} alt=\"change avatar\" className={classes.sizeSmall} />\n      <div style={{ textAlign: \"center\" }} >{username} </div>\n    </div>\n  );\n};\n\n","// @ts-nocheck\nimport React, { useCallback, useContext } from 'react';\n\n\nexport interface IFirebaseContext {\n\tgetProfile: (address: string) => Promise<IFetchResponseBase>;\n\tsetProfile: (address: string, username: string, avatar: string) => Promise<IFetchResponseBase>;\n\tclaim: (address: string) => Promise<IFetchResponseBase>;\n\tprepareMint: (address: string, receiver: string, message: string) => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n\tgetProfile: () => Promise.resolve({ isSuccessful: false }),\n\tsetProfile: () => Promise.resolve({ isSuccessful: false }),\n\tclaim: () => Promise.resolve({ isSuccessful: false }),\n\tprepareMint: () => Promise.resolve({ isSuccessful: false }),\n});\n\n\n\nconst fetchBase =\n\tprocess.env.NODE_ENV === 'development'\n\t\t? 'http://localhost:8000'\n\t\t: 'https://peopleparty-server.herokuapp.com';\n\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n\t/*const { jwt } = useContext(JwtContext);\n\n\tconst  = useCallback(\n\t\t(path: string, request: Partial<RequestInit>) => {\n\t\t\treturn fetch(fetchBase + path, {\n\t\t\t\t...request,\n\t\t\t\theaders:\n\t\t\t\t\tjwt\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t...request.headers,\n\t\t\t\t\t\t\tAuthorization: 'Bearer ' + jwt\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t...request.headers\n\t\t\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[jwt]\n\t);*/\n\n\n\n\n\tconst getProfile = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/profile/${address}`, {\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn await fetchRes.json();\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst setProfile = useCallback(\n\t\tasync (address: string, username: string, avatar: string): Promise<IFetchResponseBase> => {\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/profile/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ username: username, avatar: avatar })\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn { isSuccessful: true };\n\t\t\t}\n\n\t\t\treturn { isSuccessful: false, message: fetchRes.statusText };\n\t\t},\n\t\t[]\n\t);\n\n\tconst claim = useCallback(\n\t\tasync (address: string): Promise<IFetchResponseBase> => {\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/claim/${address}`, {\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn await fetchRes.json();\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst prepareMint = useCallback(\n\t\tasync (address: string, receiver: string, message: string): Promise<IFetchResponseBase> => {\n\t\t\tconst fetchRes = await fetch(fetchBase + `/users/prepareMint/${address}`, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ receiver: receiver, message: message })\n\t\t\t});\n\n\t\t\tif (fetchRes.ok) {\n\t\t\t\treturn await fetchRes.json();\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\treturn (\n\t\t<FirebaseContext.Provider\n\t\t\tvalue={{\n\t\t\t\tgetProfile,\n\t\t\t\tsetProfile,\n\t\t\t\tclaim,\n\t\t\t\tprepareMint,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</FirebaseContext.Provider>\n\t);\n};\n","// @ts-nocheck\n\nimport \"./App.css\";\nimport React, {\n  useCallback,\n  useEffect,\n  useState,\n  useMemo,\n  useContext\n} from \"react\";\n\n//ui\nimport { Button, makeStyles, Avatar, IconButton, createStyles, Theme, TextField } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\nimport _ from \"underscore\";\nimport { Cursor, Cursors } from './Cursor';\nimport { FirebaseContext } from \"./firebaseContext\";\n\n\n//mint\nimport { TezosToolkit, OpKind, MichelsonMap } from '@taquito/taquito'\nimport {\n  BeaconWallet,\n  BeaconWalletNotInitialized,\n} from '@taquito/beacon-wallet'\n\nconst Tezos = new TezosToolkit('https://mainnet.api.tez.ie')\nconst wallet = new BeaconWallet({\n  name: 'hicetnunc.xyz',\n  preferblackNetwork: 'mainnet',\n})\nTezos.setWalletProvider(wallet)\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://peopleparty-server.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    sizeBig: {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n    },\n    sizeSmall: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n    },\n  }),\n);\n\nfunction App() {\n\n  const classes = useStyles();\n  const { getProfile, setProfile, claim, prepareMint } = useContext(FirebaseContext);\n\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState('sync');\n  const [showUnsync, setShowUnsync] = useState(false);\n  const isMobile = window.innerWidth <= 500;\n  const [showPanel, setShowPanel] = useState(false);\n  const [collections, setCollections] = useState([]);\n  const [username, setUsername] = useState(\"anon\");\n  const [avatar, setAvatar] = useState(\"https://ipfs.io/ipfs/QmVAiRHjVLPJYnf7jCpVeqrqRBE7HFN9nm5ZB2QSZ5BY52\");\n  const userCursorRef = React.createRef<HTMLDivElement>();\n  const [userLocations, setUserLocations] = useState({});\n  const [inputReceiver, setInputReceiver] = useState();\n  const [inputMessage, setInputMessage] = useState();\n  const [preview, setPreview] = useState();\n  const [metadataUri, setMetadataUri] = useState();\n\n  socket.emit('username', username);\n  socket.emit('avatar', avatar);\n\n  useEffect(() => {\n\n    getProfile(activeAccount ? activeAccount.address : \"\").then((res) => {\n      if (res) {\n        socket.emit('username', res.username);\n        socket.emit('avatar', res.avatar);\n        setUsername(res.username);\n        setAvatar(res.avatar);\n      }\n    });\n  }, [getProfile, activeAccount]);\n\n  const onCursorMove = useCallback(\n    function cursorMove(\n      clientId: string,\n      [x, y]: number[],\n      clientProfile: IUserProfile\n    ) {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      const absoluteX = width * x;\n      const absoluteY = height * y;\n\n\n      setUserLocations((userLocations) => {\n        const newUserLocations = {\n          ...userLocations,\n          [clientId]: {\n            ...userLocations[clientId],\n            x: absoluteX,\n            y: absoluteY,\n            avatar: clientProfile.avatar,\n            username: clientProfile.name,\n          }\n        };\n        return newUserLocations;\n      });\n    },\n    []\n  );\n\n  useEffect(() => {\n    const onRoomateDisconnect = (clientId: string) => {\n      setUserLocations((userLocations) => {\n        const newUserLocations = {\n          ...userLocations\n        };\n        delete newUserLocations[clientId];\n\n        return newUserLocations;\n      });\n    };\n\n    socket.on('roommate disconnect', onRoomateDisconnect);\n    socket.on('cursor move', onCursorMove);\n    return () => {\n      socket.off('roomate disconnect', onRoomateDisconnect);\n      socket.off('cursor move', onCursorMove);\n    };\n  }, [onCursorMove]);\n\n  useEffect(() => {\n    async function fetchGraphQL(operationsDoc, operationName, variables) {\n      let result = await fetch('https://hdapi.teztools.io/v1/graphql', {\n        method: 'POST',\n        body: JSON.stringify({\n          query: operationsDoc,\n          variables: variables,\n          operationName: operationName,\n        }),\n      })\n\n      var ress = await result.json();\n      return ress;\n    }\n\n    async function fetchCollection(addr) {\n      const { errors, data } = await fetchGraphQL(\n        query_collection,\n        'collectorGallery',\n        { address: addr }\n      )\n      if (errors) {\n        console.error(errors)\n      }\n      const result = data ? data.hic_et_nunc_token_holder : null;\n      setCollections(result)\n      return result\n    }\n\n    if (activeAccount)\n      fetchCollection(activeAccount.address);\n  }, [activeAccount]);\n\n  const HashToURL = (hash, type) => {\n    // when on preview the hash might be undefined.\n    // its safe to return empty string as whatever called HashToURL is not going to be used\n    // artifactUri or displayUri\n    if (hash === undefined) {\n      return ''\n    }\n\n    switch (type) {\n      case 'HIC':\n        return hash.replace('ipfs://', 'https://pinata.hicetnunc.xyz/ipfs/')\n      case 'CLOUDFLARE':\n        return hash.replace('ipfs://', 'https://cloudflare-ipfs.com/ipfs/')\n      case 'PINATA':\n        return hash.replace('ipfs://', 'https://gateway.pinata.cloud/ipfs/')\n      case 'IPFS':\n        return hash.replace('ipfs://', 'https://ipfs.io/ipfs/')\n      case 'INFURA':\n        try {\n          var cidv1 = new ipfsClient.CID(hash.replace('ipfs://', '')).toV1()\n          var subdomain = cidv1.toBaseEncodedString('base32')\n          return `https://${subdomain}.ipfs.infura-ipfs.io/`\n        } catch (err) {\n          return undefined\n        }\n      case 'DWEB':\n        return hash.replace('ipfs://', 'http://dweb.link/ipfs/')\n      default:\n        console.error('please specify type')\n        return hash\n    }\n  }\n\n  //fetch wallet name if it exist for example, trydrum.tez\n  async function getDomain(address: string) {\n    let domain;\n    await fetch('https://api.tezos.domains/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        query: `\n            {\n              reverseRecord(address: \"`+ address + `\"){owner domain{name}}\n            }\n            `,\n        variables: {\n        },\n      }\n      ),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.data.reverseRecord) {\n          domain = result.data.reverseRecord.domain.name;\n          setSynced(domain);\n          setUsername(domain);\n        }\n      });\n  }\n\n  const updateCursorPosition = useMemo(\n    () =>\n      _.throttle((position: [number, number]) => {\n        socket.emit('cursor move', { x: position[0], y: position[1] });\n      }, 5),\n    []\n  );\n\n  const onMouseMove = useCallback(\n    (event: MouseEvent) => {\n      const x = event.clientX;\n      const y = event.clientY;\n\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      const relativeX = (x - 60) / width;\n      const relativeY = (y - 60) / height;\n\n      updateCursorPosition([relativeX, relativeY]);\n\n      if (userCursorRef.current) {\n        userCursorRef.current.style.left = x + 20 + 'px';\n        userCursorRef.current.style.top = y + 20 + 'px';\n      }\n    },\n    [updateCursorPosition, userCursorRef]\n  );\n\n  useEffect(() => {\n    window.addEventListener('mousemove', onMouseMove);\n  }, [onMouseMove]);\n\n\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(activeAccount.address.slice(0, 6) + \"...\" + activeAccount.address.slice(32, 36));\n        setUsername(activeAccount.address.slice(0, 6) + \"...\" + activeAccount.address.slice(32, 36));\n        setShowUnsync(true);\n        getDomain(activeAccount.address);\n      }\n      else {\n        setSynced('sync');\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount]);\n\n\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount())\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount())\n        setSynced('sync');\n        setUsername(\"anon\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount())\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address)\n      setShowUnsync(true);\n      getDomain(activeAccount.address);\n\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount())\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address)\n        setShowUnsync(true);\n\n        getDomain(permissions.address);\n\n      }\n      catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  const onChangeReceiver = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputReceiver(event.target.value);\n  };\n\n  const onChangeMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputMessage(event.target.value);\n  };\n\n\n  return (\n    <>\n      <Cursor avatar={avatar} userCursorRef={userCursorRef} username={username} />\n      <div style={{ height: \"100vh\" }} >\n\n        <div className=\"top-left\" style={{ fontSize: isMobile ? \"1em\" : \"1.5em\", display: \"flex\", alignItems: \"center\" }} >\n          SUP\n        </div>\n\n        <div>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Receiver Address\"\n            variant=\"standard\"\n            fullWidth\n            value={inputReceiver}\n            onChange={onChangeReceiver}\n          />\n          <TextField\n            id=\"standard-basic\"\n            label=\"Message\"\n            variant=\"standard\"\n            fullWidth\n            multiline\n            value={inputMessage}\n            onChange={onChangeMessage}\n          />\n          <Button size={isMobile ? \"small\" : \"medium\"} title={\"unsync\"} onClick={async () => {\n            let res = await prepareMint(activeAccount.address, inputReceiver, inputMessage);\n            setMetadataUri(res.metadataUri);\n            setPreview(res.artifacthash);\n          }} >Preview  </Button>\n\n          {preview && <div>\n            <iframe src={'https://ipfs.io/ipfs/' + preview} scrolling='no' width={\"100%\"} height={500}></iframe>\n          </div>}\n          {preview && <Button size={isMobile ? \"small\" : \"medium\"} title={\"unsync\"} onClick={async () => {\n            //mint\n            await Tezos.wallet\n              .at(\"KT1Hkg5qeNhfwpKW4fXvq7HGZB9z2EnmCCA9\")\n              .then((c) =>\n                c.methods\n                  .mint_OBJKT(\n                    activeAccount.address,\n                    1,\n                    (metadataUri)\n                      .split('')\n                      .reduce(\n                        (hex, c) =>\n                          (hex += c.charCodeAt(0).toString(16).padStart(2, '0')),\n                        ''\n                      ),\n                    100\n                  )\n                  .send({ amount: 0, storageLimit: 310 })\n              )\n              .then((op) =>\n                op.confirmation(1).then(async () => {\n                  console.log(op)\n                  let tokenID = op._operationResult._events[0][0].metadata.internal_operation_results[0].parameters.value.args[1].args[0].int;\n                  const contract = await Tezos.wallet.at(\n                    \"KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton\"\n                  );\n\n                  const result = await contract.methods\n                    .transfer([\n                      {\n                        from_: activeAccount.address,\n                        txs: [\n                          {\n                            to_: inputReceiver,\n                            token_id: tokenID,\n                            amount: 1,\n                          },\n                        ],\n                      },\n                    ])\n                    .send();\n                  console.log(result);\n\n                })\n              )\n              .catch((err) => {\n                // if any error happens\n                console.log(err)\n              })\n            //send\n\n\n\n          }} >Mint &amp; Send</Button>}\n\n        </div>\n\n        <div className=\"bottom\" style={{ position: \"absolute\" }} >\n          <div   >\n            {showPanel &&\n              <div className=\"panel\" style={{ display: \"flex\", width: \"100%\", overflowY: \"auto\" }}>\n                {collections &&\n                  collections.map(({ token }) => (\n                    <IconButton\n                      key={token.id}\n                      onClick={() => {\n                        setAvatar(HashToURL(token.display_uri, 'IPFS'));\n                        socket.emit('avatar', HashToURL(token.display_uri, 'IPFS'));\n                        setProfile(activeAccount.address, username, HashToURL(token.display_uri, 'IPFS'));\n                      }}\n                    >\n                      <Avatar variant=\"rounded\" src={HashToURL(token.display_uri, 'IPFS')} alt={token.id} className={classes.sizeBig} />\n\n                    </IconButton>\n                  ))\n                }\n              </div>\n            }\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"auto\" }}>\n              <Button title={\"Adventure Networks\"} size={isMobile ? \"small\" : \"medium\"} onClick={async () => {\n                //claim(activeAccount.address)\n                //mint\n                /*\n                await Tezos.wallet\n                  .at(\"KT1Hkg5qeNhfwpKW4fXvq7HGZB9z2EnmCCA9\")\n                  .then((c) =>\n                    c.methods\n                      .mint_OBJKT(\n                        \"tz2DNkXjYmJwtYceizo3LwNVrqfrguWoqmBE\",\n                        1,\n                        (\"ipfs://QmUeJQ2PsZ1eZE4Kwb3gesZmC34HAcBkm8mU2hEe194aLb\")\n                          .split('')\n                          .reduce(\n                            (hex, c) =>\n                              (hex += c.charCodeAt(0).toString(16).padStart(2, '0')),\n                            ''\n                          ),\n                        100\n                      )\n                      .send({ amount: 0, storageLimit: 310 })\n                  )\n                  .then((op) =>\n                    op.confirmation(1).then(() => {\n                      console.log(op.hash)\n                    })\n                  )\n                  .catch((err) => {\n                    // if any error happens\n                    console.log(err)\n                  })\n                */\n                //upload ipfs\n                let res = await prepareMint(activeAccount.address);\n                console.log(res);\n\n\n              }} >  <div style={{ textAlign: \"left\" }}> Adventure <br></br>Networks </div> </Button>\n            </div>\n\n            <div style={{ display: \"flex\", alignItems: \"end\", justifyContent: \"flex-end\" }}>\n\n              <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\" }}>\n\n\n                {showUnsync && <Button size={isMobile ? \"small\" : \"medium\"} title={\"unsync\"} onClick={() => { unsync() }} ><u>unsync</u> </Button>}\n\n                {showUnsync && <div> | </div>}\n                <Button title={\"sync\"} size={isMobile ? \"small\" : \"medium\"} onClick={async () => { await sync(); }} ><u>{synced}</u> </Button>\n                {showUnsync && <><div> | </div>\n                  <Button size={isMobile ? \"small\" : \"medium\"} title={\"unsync\"} onClick={() => { setShowPanel(!showPanel) }} >\n                    <Avatar variant=\"rounded\" src={avatar} alt=\"change avatar\" className={classes.sizeSmall} />\n                  </Button>\n                </>\n                }\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\nconst query_collection = `\nquery collectorGallery($address: String!) {\n  hic_et_nunc_token_holder(where: {holder_id: {_eq: $address}, token: {creator: {address: {_neq: $address}}}, quantity: {_gt: \"0\"}}, order_by: {token_id: desc}) {\n\ttoken {\n\t  id\n\t  artifact_uri\n\t  display_uri\n\t  thumbnail_uri\n\t  timestamp\n\t  mime\n\t  title\n\t  description\n\t  supply\n\t  royalties\n\t  creator {\n\t\taddress\n\t  }\n\t}\n  }\n}\n`","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\nimport { FirebaseProvider } from \"./firebaseContext\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\n  <FirebaseProvider>\n    <App />\n  </FirebaseProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}